from sklearn.neighbors import KNeighborsClassifier
import numpy as np
import matplotlib.pyplot as plt
import mglearn
from sklearn.linear_model import LogisticRegression
from sklearn.svm import LinearSVC

def test(max_layer, min_atom_distance):
    knn = KNeighborsClassifier(n_neighbors=1)
    # max_layer_leng/min_atomic_leng
    train_set = [[0.75000000003169454, 2.1531405000909905], [0.54930175768613132, 1.3284594369538425],
                 [0.31206606628699868, 0.4575788398285372], [0.38648126218017059, 0.95671943647308311],
                 [0.55367672766289833, 1.3573000000000022], [1.2425695187984569, 3.0799998863026969],
                 [0.88888888485196527, 3.8705564268661607], [1.0000000000000002, 2.6751160000000009],
                 [1.5000591953915039, 2.3248506400000011], [0.66870171715163762, 2.1772500000000008],
                 [0.6143545395628911, 1.8768154500000005], [0.42951711706940976, 1.4391000636591758],
                 [0.3976748255998182, 1.2144849999999998], [0.806682577565624, 2.5551074978714725],
                 [0.57735026918962584, 1.9195000000000002], [0.69534602501450815, 2.0369999999999999],
                 [0.6000000000299196, 1.4504527500612951], [0.65465348366396436, 2.1610000000000005],
                 [0.42087452263109015, 1.4392496208325554], [0.4100465990464715, 1.2983099023669942],
                 [0.68919811688229726, 1.9790000000000001], [0.37500000001584732, 1.2756296250539076],
                 [0.57735026918962584, 1.7213845000000001], [0.37500000001584732, 1.506933000063682],
                 [0.37500000001584738, 1.5697770000663382], [1.6943649347289691, 6.0997137650242887],
                 [2.254869263952227, 3.2061180729431022], [1.2377971903789327, 2.9894346000000027],
                 [1.2539904044953434, 3.0765296237699928], [2.850831087358066, 4.1338978600000011],
                 [0.65465367071785774, 1.4743177500623039], [0.78770143343718435, 1.8550944000000005],
                 [0.94162654580573157, 3.3898555649006337], [0.88888888485196527, 2.9329395422354958],
                 [0.70590825071480079, 1.6395753081093609], [0.28237395380757779, 0.85676855166450849],
                 [0.88888888485196527, 4.1777777588042362], [1.0, 2.9860000000000002],
                 [0.89003112057516665, 3.175311517039908], [1.1489683234662855, 2.9500000000000011],
                 [1.1493537009223069, 3.0803256000000001], [1.3641707422189535, 2.8722959255409748],
                 [1.1527856996195007, 2.8471198799999997], [1.1320338604265516, 2.814665564000002],
                 [1.2451891776108879, 3.3816112000000018], [1.1715380017456367, 2.8475000000000001],
                 [1.1522903756970355, 2.9434393600000002], [0.56694670952239767, 1.5305325000646794],
                 [0.57735026918962584, 1.7598000000000003], [0.50015001500149958, 1.478629123057968],
                 [1.1371433087563603, 2.8180800000000019], [1.2425885487838135, 3.1389120000000013],
                 [1.1579413593308081, 3.0920000000000005],
                 # 新加13个二维材料
                 [2.2548681518731568, 3.2061180750000009],
                 [1.1614365166749336, 3.0318749999999994], [1.1537391237188268, 2.8223120000000002],
                 [1.3265206577579143, 3.0999999999999996], [1.2857142857142863, 2.8692000000000011],
                 [1.2947947453989455, 3.2250000000000014], [1.1191802854456956, 2.9033131999999995],
                 [1.1493537009223069, 3.0803256000000001],
                 [1.240052513250911, 3.0250000000000039],
                 [1.2005680670256706, 3.2630000000000017],
                 [1.3673407035629246, 3.1270747999999999], [1.2414222422541537, 3.0670000000000002],
                 [1.1340068277269548, 2.9249999999999994]]
    train_max_layerlength_min_atom_len = [[train_set[i][0]/train_set[i][1], train_set[i][0]] for i in range(len(train_set))]
    x_array = np.array(train_max_layerlength_min_atom_len)
    # 50个数据
    y = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1]

    y_array = np.array(y)
    knn.fit(x_array, y_array)
    x_new = np.array([[max_layer, min_atom_distance]])         # 行向量
    prediction = knn.predict(x_new)

def plot_knnmodel():
    train_set = [[0.75000000003169454, 2.1531405000909905], [0.54930175768613132, 1.3284594369538425],
                 [0.31206606628699868, 0.4575788398285372], [0.38648126218017059, 0.95671943647308311],
                 [0.55367672766289833, 1.3573000000000022], [1.2425695187984569, 3.0799998863026969],
                 [0.88888888485196527, 3.8705564268661607], [1.0000000000000002, 2.6751160000000009],
                 [1.5000591953915039, 2.3248506400000011], [0.66870171715163762, 2.1772500000000008],
                 [0.6143545395628911, 1.8768154500000005], [0.42951711706940976, 1.4391000636591758],
                 [0.3976748255998182, 1.2144849999999998], [0.806682577565624, 2.5551074978714725],
                 [0.57735026918962584, 1.9195000000000002], [0.69534602501450815, 2.0369999999999999],
                 [0.6000000000299196, 1.4504527500612951], [0.65465348366396436, 2.1610000000000005],
                 [0.42087452263109015, 1.4392496208325554], [0.4100465990464715, 1.2983099023669942],
                 [0.68919811688229726, 1.9790000000000001], [0.37500000001584732, 1.2756296250539076],
                 [0.57735026918962584, 1.7213845000000001], [0.37500000001584732, 1.506933000063682],
                 [0.37500000001584738, 1.5697770000663382], [1.6943649347289691, 6.0997137650242887],
                 [2.254869263952227, 3.2061180729431022], [1.2377971903789327, 2.9894346000000027],
                 [1.2539904044953434, 3.0765296237699928], [2.850831087358066, 4.1338978600000011],
                 [0.65465367071785774, 1.4743177500623039], [0.78770143343718435, 1.8550944000000005],
                 [0.94162654580573157, 3.3898555649006337], [0.88888888485196527, 2.9329395422354958],
                 [0.70590825071480079, 1.6395753081093609], [0.28237395380757779, 0.85676855166450849],
                 [0.88888888485196527, 4.1777777588042362], [1.0, 2.9860000000000002],
                 [0.89003112057516665, 3.175311517039908], [1.1489683234662855, 2.9500000000000011],
                 [1.1493537009223069, 3.0803256000000001], [1.3641707422189535, 2.8722959255409748],
                 [1.1527856996195007, 2.8471198799999997], [1.1320338604265516, 2.814665564000002],
                 [1.2451891776108879, 3.3816112000000018], [1.1715380017456367, 2.8475000000000001],
                 [1.1522903756970355, 2.9434393600000002], [0.56694670952239767, 1.5305325000646794],
                 [0.57735026918962584, 1.7598000000000003], [0.50015001500149958, 1.478629123057968],
                 [1.1371433087563603, 2.8180800000000019], [1.2425885487838135, 3.1389120000000013],
                 [1.1579413593308081, 3.0920000000000005],
                 # 新加25个二维材料
                 [2.2548681518731568, 3.2061180750000009],
                 [1.1614365166749336, 3.0318749999999994], [1.1537391237188268, 2.8223120000000002],
                 [1.3265206577579143, 3.0999999999999996], [1.2857142857142863, 2.8692000000000011],
                 [1.2947947453989455, 3.2250000000000014], [1.1191802854456956, 2.9033131999999995],
                 [1.1493537009223069, 3.0803256000000001],
                 [1.240052513250911, 3.0250000000000039],
                 [1.2005680670256706, 3.2630000000000017],
                 [1.3673407035629246, 3.1270747999999999], [1.2414222422541537, 3.0670000000000002],
                 [1.1340068277269548, 2.9249999999999994]]
    x_array = np.array(train_set)
    # y = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
    #      0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1]
    y = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]

    y_array = np.array(y)
    fig, axes = plt.subplots(1, 3, figsize=(10, 3))
    for n_neighbou, ax in zip([1, 2, 3], axes):
        clf = KNeighborsClassifier(n_neighbou, weights='distance').fit(x_array, y_array)
        mglearn.plots.plot_2d_separator(clf, x_array, fill=True
                                        , eps=0.5, ax=ax, alpha=.4)
        mglearn.discrete_scatter(x_array[:, 0], x_array[:, 1], y_array, ax=ax)
        # (x_array[:, 0], x_array[:, 1], y_array, ax=ax)
        ax.set_title("1")
        ax.set_xlabel("max_layer_length/min_atomic_length")

        ax.set_ylabel("max_layer_length")
    axes[0].legend(loc=3)
    plt.show()


plot_knnmodel()
